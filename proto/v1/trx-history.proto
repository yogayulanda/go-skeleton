syntax = "proto3";

package proto.v1;
option go_package = "github.com/yogayulanda/if-trx-history/api/proto/gen/v1;v1";

import "google/protobuf/timestamp.proto"; // Mengimpor timestamp.proto dari Google
import "google/api/annotations.proto";  // Import untuk gRPC-Gateway

// =====================
// Health Check Service
// =====================
service HealthService {
  // Check the health status of the service and its dependencies
  rpc CheckHealth(HealthCheckRequest) returns (HealthCheckResponse) {
    option (google.api.http) = {
      get: "/v1/health"
    };
  }
}

// Request message for health check
message HealthCheckRequest {
  // You can define fields here if needed (e.g., request parameters)
  // For now, it's empty to simply trigger the health check.
}

// Response message for health check
message HealthCheckResponse {
  string health_status = 1; // e.g., "SERVING", "NOT_SERVING"
  map<string, string> component_statuses = 2; // e.g., { "db": "OK", "kafka": "FAIL", "redis": "OK" }
}

// =====================
// Transaction History Service
// =====================
service TransactionHistoryService {
  // Get a list of transactions for a user
  rpc GetTransactions(GetTransactionsRequest) returns (GetTransactionsResponse) {
    option (google.api.http) = {
      get: "/v1/transactions"
    };
  }

  // Store a new transaction
  rpc CreateTransaction(Transaction) returns (CreateTransactionResponse) {
    option (google.api.http) = {
      post: "/v1/transactions"
      body: "*"
    };
  }
}

// =====================
// Request/Response for Transactions
// =====================

// Request message for fetching transactions
message GetTransactionsRequest {
  string user_id = 1; // User ID to fetch transactions for
  string auth_token = 2; // Authentication token (if required)
}

// Response message containing a list of transactions
message GetTransactionsResponse {
  repeated Transaction transactions = 1; // List of transactions
  string status_message = 2; // Optional status message
}

// Transaction message representing a single transaction
message Transaction {
  string id = 1;          // Transaction ID
  string user_id = 2;     // User ID
  double amount = 3;      // Transaction amount
  string description = 4; // Description of the transaction
  google.protobuf.Timestamp timestamp = 5; // Timestamp of the transaction
  string status = 6;      // e.g., "SUCCESS", "FAILED"
}

// Response message for creating a new transaction
message CreateTransactionResponse {
  string status_message = 1; // Status message of the transaction
  string transaction_id = 2; // Newly created transaction ID
}
